syntax = "proto3";


// ** RPC REQUEST ENVELOPE **
message RpcRequest {
    string service_name = 4;            // "ContentRpc", eg
    string method_name = 5;             // "GetMetadata", eg
    bytes payload = 6;                  // method parameters
    string auth_id = 7;                 // after login
    string auth_token = 8;              // after login
    int32 client_version = 9;
    string platform = 12;               // "Android"
    string region = 13;                 // "ROW" = rest of world
    string client_external_version = 14;
    string client_internal_version = 15;
    string request_id = 16;             // unique UUID per request
    int32 accept_encoding = 17;         // 1 for GZIP
    int64 current_client_time = 20;     // seconds since epoch
    string timezone = 22;               // "AEST" eg
    string carrier = 24;                // eg "310260" for T-Mobile US
    string network_access = 25;         // always "C"
    string hardware_id = 26;            // always "2363"
    string android_id = 29;             // 16 hex digits, lower case
    int32 jailbroken_flag = 30;         // always 1
    string device_model = 33;           // "unknown Android SDK built for x86_64" (device model)
    string device_id = 34;              // 64 hex digits, lower case
}
// Response for RpcRequest
message RpcResponse {
    uint64 current_server_time = 2; // not always present
    bytes responseData = 4;         // if responseCode == 1
    uint32 responseCode = 5;        // 1 = "OK", 51 = Client Restart, 
    string errorMessage = 6;        // if responseCode != 1
    enum ResponseCode {
        default                     = 0;
        ok                          = 1;
        error                       = 2;
        sessionExpired              = 3;
        authFailed                  = 4;
        suspended                   = 12;
        invalidClientVersion        = 50;
        forceClientRestart          = 51;
    }
}


// ** RPC AUTH REQUEST - DoAuthGuest, DoAuthGoogle **
message AuthRpc {
    message DoAuthGuest {
        string deviceId = 1;    // 32 hex digits, lower case
        string platform = 2;    // "Android"
        string language = 3;    // "en"
        string playerName = 4;
        string apkName = 5;     // "com.ea.game.starwarscapital_row"
        string region = 6;      // "ROW"
        uint32 timeOffset = 7;  // in minutes, from UTC-10
    }
    message DoAuthGoogle {
        string oauthToken = 1;
        string platform = 2;    // "Android"
        string language = 3;    // "en"
        string apkName = 5;     // "com.ea.game.starwarscapital_row"
        string guestId = 7;     // ?
        string region = 8;      // "ROW"
        sint32 timeOffset = 10; // in minutes, from UTC-10
    }
}
// Response for AuthRpc/DoAuthGuest
message AuthResponse {
    string playerId = 1;      //DONE
    string sessionId = 2;     //DONE
}


// ** RPC CONTENT REQUEST - GetMetaData **
message ContentRpc {
    message GetMetadata {
        message GetVersion {
            string osName = 2;          // "Android"
            string sdkVersion = 3;      // "unknown Android SDK built for x86_64"
            string osVersion = 4;       // "Android OS 7.1.1 / API-25 (NYC/3756122)"
            uint32 n2002 = 5;           // always 2002  - system memory
            uint32 n512 = 6;            // always 512   - graphics memory
            string deviceName = 7;      // "Android Emulator OpenGL ES Translator (Intel Iris OpenGL Engine)"
            string deviceVendor = 8;    // "Google (Intel Inc.)"
            string openGLVersion = 9;   // "OpenGL ES 2.0 (2.1 INTEL-10.14.58)"
            string cpuVersion = 10;     // "Intel x86 SSE3"
            uint32 n2 = 11;             // always 2     (processor count)
            string apkName = 12;        // "com.ea.game.starwarscapital_row"
            string gameVersion = 13;    // "0.8.12"
            string buildVersion = 14;   // "0.8.225590"
            string region = 15;         // always "ROW"
        }
        GetVersion version = 1;
    }
}
// Response for ContentRpc/GetMetadata
message Metadata {
    map<string,string> settings = 1;                //DONE
//    bytes something2 = 2;                           //NULL ?
//    bytes something3 = 3;                           //NULL ?
    int32 asset_version = 4;                        //NULL ?
    string asset_subpath = 5;                       //NULL ?
    string tex_format = 6;                          //NULL ?
    int64 server_timestamp = 7;                     //DONE
    bool debug_mode = 8;                            //DONE
    string latest_localization_bundle_version = 9;  //DONE
    string latest_gamedata_version = 10;            //DONE
    int32 resource_cache_memory_limit = 11;         //DONE
    string gamedata_revision = 12;                  //DONE
    bool channel_server_enabled = 13;               //DONE
    string channel_server_endpoint = 14;            //DONE
}


// ** RPC GAME REQUEST - GetGameData, GetLocalizationBundle **
message GameRpc {
    message GetGameData {
        string version = 1;             // latest_gamedata_version from MetaData 
        string device_platform = 2;     // 'Android'
    }
    message GetLocalizationBundle {
        string version = 1;             // latest_localization_bundle_version from MetaData
    }
}
// Response for GameRpc/GetGameData
message GameData {
    repeated Unit units = 1;                                 //DONE
    repeated BattleEnvironment battle_environments = 2;         //DONE
    repeated XpTable xp_table = 3;                              //DONE
//    repeated string unknown_null4 = 4;                          //NULL ?
//    repeated string unknown_null5 = 5;                          //NULL ?
//    repeated string unknown_null6 = 6;                          //NULL ?
    repeated CraftingMaterial material = 7;                  //DONE
    repeated Recipe recipe = 8;                                 //DONE
    repeated StatProgression stat_progression = 9;              //DONE
    repeated Category category = 10;                            //DONE
    repeated HelpEntry help_entry = 11;                         //DONE
//    repeated SystemModifier system_modifier = 12;               //NULL ?
    repeated Challenge challenge = 13;                          //DONE
    repeated SkillDefinition skill = 14;                        //DONE
//    repeated string unknown_null15 = 15;                        //NULL ?
    repeated EventSampling event_sampling = 16;                 //DONE
    repeated Equipment equipment = 17;                       //DONE
    repeated War war_definition = 18;                        //DONE
    repeated TargetingSet targeting_set = 19;                   //DONE
    repeated Ability ability = 20;                              //DONE
    repeated Effect effect = 21;                                //DONE
    repeated Requirement requirement = 22;                      //DONE
    repeated PowerUpBundle power_up_bundle = 23;                //DONE
    GuildBanner guild_banner = 24;                           //DONE
//    repeated string undefined_null = 25;                        //NULL ?
    repeated GuildRaidConfig raid_config = 26;                  //DONE
    repeated GuildRaid guild_raid = 27;                         //DONE
    repeated ModSet mod_sets = 28;            //DONE
    repeated ModStat mod_stats = 29;                   //DONE
//    repeated StatModUpdaterDefinition stat_mod_updater = 30;    //NULL ?
//    repeated DecimalTable decimal_table = 31;                   //NULL ?
    repeated GearItems gear = 32;                         //DONE
    repeated PointsMap point_map = 33;                          //DONE
    repeated HomeData home = 34;                                //DONE
//    repeated string null_string = 35;                           //DONE
    repeated TerritoryBattleEvent territory_battle_events = 36; //DONE
    repeated TerritoryWars territory_wars = 37;                 //DONE
}
// Response for GameRpc/GetLocalizationBundle
message ZipFile {
    bytes zipped = 1;   //DONE
}


// ** RPC GUILD REQUEST - GetGuildData **
message GuildRpc {
    message GetInitialData {
        uint32 n1 = 1;          // 1
    }    
    message GetGuildData {
        string guild_id = 1;    //DONE
        string player_id = 2;   //DONE
    }
}


// ** RPC PLAYER REQUEST - GetPlayerProfile **
message PlayerRpc {
    message GetInitialData {
        uint32 n1 = 1;          // 1
    }    
    message GetPlayerProfile {
        string player_id = 1;   //DONE - /\d{9}/
        string ally_code = 2;   //DONE - digits only, "0" if player_id is specified 
    }
}

//
// ** SUPPORTING OBJECTS **
//

// [[ A ]]
message Ability {
   string ability_id = 1;                                   //DONE
   string name_key = 2;                             //DONE
   string desc_key = 3;                             //DONE
//   string unknown_null4 = 4;                        //NULL ?
   string prefab_name = 5;                          //DONE
//   repeated BattleCondition trigger_condition = 6;  //NULL ?  
//   string unknown_null7 = 7;                        //NULL ?
//   string stacking_line_override = 8;               //NULL ?
   repeated AbilityTier tier = 9;                   //DONE
//   string unknown_null10 = 10;                      //NULL ?
   int32 cooldown = 11;                             //DONE
//   string unknown_null12 = 12;                      //NULL ?
   string icon = 13;                                //DONE
   string apply_type_tooltip_key = 14;              //DONE
   repeated EffectTag descriptive_tag = 15;         //DONE
   repeated EffectTag effected_tag = 16;            //DONE
   repeated EffectReference effect_reference = 17;  //DONE
//   MessageDialog confirmation_message = 18;         //NULL ?         
   AbilityButtonLocationType button_location = 19;  //DONE
   string short_desc_key = 20;                      //NULL ?
   int32 max_tiers = 21;                            //DONE
   int32 available = 22;                            //DONE
}
message AbilityReference {
   string ability_id = 1;                 //DONE
   UnitTier required_tier = 2;    //DONE
   Rarity required_rarity = 3;    //DONE
   int32 override = 4;            //DONE
}
message AbilityTier {
   string desc_key = 1;                             //DONE
   string upgrade_desc_key = 2;                     //DONE
//   string null3 = 3;                                //NULL ?
//   string null4 = 4;                                //NULL ?
   int32 cooldown_override = 5;                     //DONE
   repeated EffectReference effect_reference = 6;   //DONE
}
message ActionLink {
   string link = 1;
   ActionLinkType type = 2;
}
message ArenaSquad {
   repeated UnitKey squad_units = 1;    //DONE
}

// [[ B ]]
message BattleCondition {
   ConditionType condition_type = 1;
   string condition_value = 2;
}
message BattleEnvironment {
   string prefab = 1;                   //DONE
//   bytes null2 = 2;                     //NULL ?
   repeated string audio_package = 3;   //DONE
}
message BucketItem {
   string item_id = 1;                       //DONE
   ItemType type = 2;                   //DONE
   int32 weight = 3;                    //DONE
   int32 minQuantity = 4;               //DONE
   int32 maxQuantity = 5;               //DONE
   Rarity rarity = 6;                   //DONE
//   StatMod stat_mod = 7;                //NULL ?
}
message CampaignElementIdentifier {
   string campaign_id = 1;                              //DONE
   string campaign_map_id = 2;                          //DONE
   string campaign_node_id = 3;                         //DONE
   CampaignNodeDifficulty campaign_node_difficulty = 4; //DONE
   string campaign_mission_id = 5;                      //DONE
}

// [[ C ]]
message Category {
   string category_id = 1;               //DONE
   string desc_key = 2;         //DONE
   bool visible = 3;            //DONE
   CombatType ui_filter = 4;    //DONE
}
message Challenge {
   string challenge_id = 1;                         //DONE
   ChallengeType type = 2;                //DONE
   string name_key = 3;                   //DONE
   string desc_key = 4;                   //DONE
//   string action_link = 5;                //NULL ?
//   Requirement view_requirement = 6;      //NULL ?
   repeated BucketItem reward = 7;        //DONE
//   bytes null8 = 8;                       //NULL
   string platform_achievement_id = 9;    //DONE
   ActionLink action_link_def = 10;       //DONE
   ChallengeClaimType claim_type = 11;    //DONE
   ChallengeRewardType reward_type = 12;  //DONE
   float reward_ratio = 13;               //DONE
}
message CraftingMaterial {
   string crafting_material_id = 1;                                     //DONE
   string name_key = 2;                               //DONE
   string desc_key = 3;                               //DONE
   string icon_key = 4;                               //DONE
//   CurrencyItem sell_value = 5;                       //MAPPED
   map<int32,int64> sell_value = 5;                   //DONE
   repeated LookupMission lookup_mission = 6;         //DONE
   int32 xp_value = 7;                                //DONE
   MaterialType type = 8;                             //DONE
//   UnitClass unit_class = 9;                          //NULL ?
   Rarity rarity = 10;                                //DONE
//   int32 training_cost = 11;                          //NULL ?
//   int32 training_cost_max_level = 12;                //NULL ?
   string unit_def_reference = 13;                    //DONE
   UnitTier tier = 14;                                //DONE
   int64 obtainable_time = 15;                        //DONE
   repeated LookupMission raid_lookup = 16;           //DONE
   repeated LookupActionLink action_link_lookup = 17; //DONE
}
message CrewGroupSlotDef {
   int32 max_size = 1;                   // [default = 0];
   Rarity rarity_requirement = 2;                   // [default = NOSTAR];
   string name_key = 3;                   // [default = ""];
   string stat_table_id = 4;                   // [default = ""];
}
message CrewMember {
   string unit_id = 1;                   // [default = ""];
   int32 slot = 2;                   // [default = 0];
   repeated SkillDefinitionReference skill_reference = 3;
}
message CurrencyItem {
   CurrencyType currency = 1;                   // [default = GRIND];
   int32 quantity = 2;                   // [default = 0];
}

// [[ D ]]
message DecimalTable {
   string decimal_table_id = 1;                   // [default = ""];
   repeated DecimalTableRow row = 2;
}
message DecimalTableRow {
   int32 index = 1;                   // [default = 0];
   int64 value_decimal = 2;                   // [default = 0];
}

// [[ E ]]
message Effect {
   string effect_id = 1;                                   //DONE
   EffectType type = 2;                             //DONE
//   string unknown_null3 = 3;                        //NULL ?
//   string unknown_null4 = 4;                        //NULL ?
//   string unknown_null5 = 5;                        //NULL ?
   repeated string param = 6;                       //DONE
   int32 chance = 7;                                //DONE
   repeated EffectTarget target = 8;                //DONE
   repeated EffectTag descriptive_tag = 9;          //DONE
   repeated EffectTag effected_tag = 10;            //DONE
//   string unknown_null11 = 11;                      //NULL ?   
//   repeated BattleCondition trigger_condition = 12; //NULL ?
//   repeated Effect effect_definition = 13;          //NULL ?
   int32 context_index = 14;                        //DONE
   repeated BattleCondition expiration_condition = 15;//DONE
   EffectApplyType apply_type = 16;                 //DONE
   EffectDamageType damage_type = 17;               //DONE
//   string unknown_null18 = 18;                      //NULL ?   
   string persistent_icon = 19;                     //DONE
   string triggered_vfx = 20;                       //DONE
   string triggered_loc_key = 21;                   //DONE
//   string unknown_null22 = 22;                      //NULL ?   
   int32 max_bonus_moves = 23;                      //DONE
   repeated EffectReference effect_reference = 24;  //DONE
   int32 multiplier_amount_decimal = 25;            //DONE
   int32 context_multiplier_decimal = 26;           //DONE
   int32 additive_amount_decimal = 27;              //DONE
   int32 result_variance_decimal = 28;              //DONE
   string persistent_loc_key = 29;                  //DONE
   string stacking_line_override = 30;              //DONE
//   bool locked = 32;                                //NULL ?
//   string null33 = 33;                              //NULL ?
//   int32 null34 = 34;                               //NULL ?
}
message EffectReference {
   string effect_id = 1;                       //DONE
   int32 context_index = 2;             //DONE
   int32 max_bonus_move = 3;            //DONE
}
message EffectTag {
   string tag = 1;                   // [default = ""];
}
message EffectTagCriteria {
   string tag = 1;                   // [default = ""];
   bool exclude = 2;                   // [default = false];
}
message EffectTarget {
   EffectTargetUnitSelect unit_select = 1;                   // [default = SELECTALL];
   EffectTargetBattleSide battle_side = 2;                   // [default = BOTHSIDES];
   UnitClass unit_class = 3;
   repeated ForceAlignment force_alignment = 4;
   EffectTargetCategoryCriteria category = 5;
   UnitHealthState health_state = 6;                   // [default = UNITHEALTHSTATEANY];
   repeated StatValueRange stat_value = 8;
   repeated EffectTagCriteria active_effect_tag_criteria = 9;
}
message EffectTargetCategoryCriteria {
   bool exclude = 1;                   // [default = false];
   repeated string category_id = 2;
}
message Equipment {
   string equipment_id = 1;                                       //DONE
   string name_key = 2;                                 //DONE
   string icon_key = 3;                                 //DONE
   int32 required_level = 4;                            //DONE
   StatDef equipment_stat = 5;                          //DONE
   string recipe_id = 6;                                //DONE
   UnitTier tier = 7;                                   //DONE
   map<int32,int64> sell_value = 8;                     //DONE
   repeated LookupMission lookup_mission = 9;           //DONE
   string mark = 10;                                    //DONE
   int64 obtainable_time = 11;                          //DONE
   repeated LookupMission raid_lookup = 12;             //DONE
   EquipmentType type = 13;                             //DONE
   repeated LookupActionLink action_link_lookup = 14;   //DONE
   int32 some_enum = 15;                                //??
}
message EventSampling {
   string event_id = 1;                   //DONE
   int32 spender_value = 2;         //DONE
   int32 non_spender_value = 3;     //DONE
}

// [[ F ]]
// [[ G ]]
message Gear {
   string gear_id = 1;               //DONE
   int32 some_int = 2;              //NULL ? Always 11
   string some_blank = 3;           //NULL ?
   int32 something = 4;             //NULL ? Always 1
   int32 something_else = 5;       //NULL ? Always 1
}
message GearItems { 
   Gear gear = 1;    //DONE
}
message GearEquipped {
    string gear_id = 1;
    int32 slot = 2;
}
message GuildBannerColor {
   string guild_banner_color_id = 1;                                    //DONE
   string tint_color = 2;                                               //DONE
   string background_color = 3;                                         //DONE
}
message GuildBanner {
   repeated string logo = 1;                                            //DONE
   repeated GuildBannerColor colors = 2;                                //DONE
   repeated GuildBannerIcon icons = 3;                                  //DONE
}
message GuildBannerIcon {
   string guild_banner_icon_id = 1;                                     //DONE
   string icon_texture = 2;                                             //DONE
   string icon_ui = 3;                                                  //DONE
}
message GuildExchangeItem {
   BucketItem item = 1;                                                 //DONE
}
message GuildRaid {
   string guild_raid_id = 1;                   //DONE
   int32 priority = 2;              //DONE
   string name_key = 3;             //DONE
   string summary_key = 4;          //DONE
   string desc_key = 5;             //DONE
   string texture_image = 6;        //DONE
//   string unknown_null = 7;         //DONE
   SquadType squad_type = 8;        //DONE
   CampaignElementIdentifier campaign_element_identifier = 9;//DONE
   string unknown_null2 = 10;       //DONE
   string icon_prefab = 11;         //DONE
   string promotion_key = 12;       //DONE
   string portrait_icon = 13;       //DONE
}
message GuildRaidConfig {
   string guild_raid_id = 1;                                       //DONE
   GuildRaidType raid_type = 2;                         //DONE
   GuildRaidRosterRefreshType roster_refresh_type = 3;  //DONE
   GuildRaidRosterRefresh roster_refresh = 4;           //DONE
   int64 raid_duration = 5;                             //DONE
}
message GuildRaidRosterRefresh {
   string type = 1;                   // [default = ""];
   int32 value = 2;
}

// [[ H ]]
message HelpEntry {
   HelpType help_entry_id = 1;                   //DONE
   repeated HelpTile tile = 2;        //DONE
}
message HelpTile {
   string text_key = 1;               //DONE
   string image = 2;                  //DONE
   string title_key = 3;              //DONE
}
message HomeData {
    string name_key = 1;            //DONE
    int32 unknown_enum = 2;         //DONE
    int32 available = 3;            //DONE
    string unlock_message = 4;      //DONE
}

// [[ I ]]
// [[ J ]]
// [[ K ]]
// [[ L ]]
message Localization { 
    string lang = 1;
    string text_key = 2;
    string text_val = 3;
}
message LookupActionLink {
   string desk_key = 1;
   ActionLink action_link = 2;
}
message LookupMission {
   CampaignElementIdentifier mission = 1;  
   bool event = 2;
}

// [[ M ]]
message MessageDialog {
   string title_key = 1;                   // [default = ""];
   string desc_key = 2;                   // [default = ""];
}
message ModSet {
   string mod_set_id = 1;                       //DONE
   string name = 2;                     //DONE
//   int32 unknown_null = 3;             //NULL ?
   string icon = 4;                     //DONE
//   string unknown_null2 = 5;            //NULL ?
   ModSetBonus complete_bonus = 6;      //DONE
   ModSetBonus max_level_bonus = 7;     //DONE
   int32 set_count = 8;                 //DONE
}
message ModSetBonus {
//   string ability_id = 1;           //NULL ?
   ModSetBonusStat stat = 2;                   //DONE
}
message ModSetBonusStat {
    string mod_set_bonus_id = 1;         //DONE
    Stat stat = 2;                  //DONE
    //   string roll = 3;             //NULL ?  
}
message ModStat {
   string mod_stat_id = 1;                              //DONE
   ModStatSlot slot = 2;                                //DONE
   string mod_set_id = 3;                                   //DONE
   Rarity rarity = 4;                                   //DONE
   string name_key = 5;                                 //DONE
   string desc_key = 6;                                 //DONE
   repeated LookupMission mission_lookup = 7;           //DONE
   repeated LookupMission raid_lookup = 8;              //DONE
   repeated LookupActionLink action_link_lookup = 9;    //DONE
   string level_table_id = 10;                          //DONE
}

// [[ N ]]
// [[ O ]]
message OldWar {
   CombatType type = 1;                     //DONE
   CampaignNodeDifficulty difficulty = 2;   //DONE
   repeated WarNode node = 3;            //DONE
}

// [[ P ]]
// Response for PlayerRpc/GetPlayerProfile
message Player {
    string name = 1;                      //DONE
    int32 level = 2;                      //DONE
//    bytes pvp_wins = 3;                   //NULL ?
//    bytes pvp_losses = 4;                 //NULL ?
//    int32 pvp_rank = 5;                   //NULL ?
    int64 ally_code = 6;                  //DONE
    string player_id = 7;                        //DONE
    repeated PlayerUnit player_units = 8;    //DONE
//    bytes null9 = 9;                      //NULL ?
    repeated PlayerStat player_stats = 10;       //DONE
    string guild_id = 11;                 //DONE
    string guild_name = 12;               //DONE
//    bytes guild_logo = 13;                //NULL ?
//    bytes guild_logo_background = 14;     //NULL ?
    string guild_banner_color = 15;       //DONE
    string guild_banner_logo = 16;        //DONE
    repeated PvPArena pvp_arena = 17;     //DONE
}
message PlayerStat {
    string name = 1;              //DONE
    string description = 2;       //DONE
    int64 value = 3;              //DONE
    int32 order = 4;              //DONE
}
message PlayerUnit {
    string player_unit_id = 1;                              //DONE
    string unit_id = 2;                            //DONE
//    bytes null3 = 3;                            //NULL ?
//    bytes null4 = 4;                            //NULL ?
//    bytes null5 = 5;                            //NULL ?
//    bytes null6 = 6;                            //NULL ?
//    bytes null7 = 7;                            //NULL ?
    Rarity rarity = 8;                          //DONE
    uint32 level = 9;                           //DONE
    uint32 total_xp = 10;                       //DONE
//    bytes null11 = 11;                          //NULL ?
//    string promotion_recipe_reference = 12;     //NULL ?    
//    bytes null13 = 13;                          //NULL ?    
//    bytes null14 = 14;                          //NULL ?
//    bytes null15 = 15;                          //NULL ?        
//    map<string,int32> skills = 16;              //DONE
    repeated Skill skills = 16;
//    repeated Stat unit_stat = 17;               //NULL ?
    repeated GearEquipped gear = 18;           //DONE
    uint32 gear_level = 19;                     //DONE
//    repeated string equipped_stat_mod_old = 20; //NULL ?
    repeated PlayerUnitMod mods = 21;                     //DONE
}
message PlayerUnitMod {
    string player_unit_mod_id = 1;              //DONE
    string definition = 2;                    //DONE - set|dots|slot
//    bytes null3 = 3;                          //NULL ?
    uint32 level = 4;                         //DONE
    ModStatTier quality = 5;                  //DONE   
//    bytes null6 = 6;                          //NULL ?
//    bytes null7 = 7;                          //NULL ?
//    bytes null8 = 8;                          //NULL ?    
    map<int32,int64> sell_value = 9;          //DONE
    map<int32,int64> remove_cost = 10;        //DONE
    bool locked = 11;                         //DONE
    PlayerUnitModPrimeStat primary_stat = 12;                //DONE
    repeated PlayerUnitModSecondStat secondary_stat = 13;     //DONE
    int32 total_xp = 14;                      //DONE
//    CurrencyItem level_cost = 15;
    map<int32,int64> level_cost = 15;        //DONE
}
message PlayerUnitModPrimeStat {
    string mod_set_id = 1;         //DONE
    Stat stat = 2;                  //DONE
    //   string roll = 3;             //NULL ?  
}
message PlayerUnitModSecondStat {
    string mod_set_id = 1;         //DONE
    Stat stat = 2;                  //DONE
    //   string roll = 3;             //NULL ?  
}
message PointsDetails {
  string key = 1;
  string value = 2;  
}
message PointsMap {
  string key = 1;
  //repeated PointsDetails values = 2;
  map<string,string> values = 2;  
}
message Position {
   string x = 1;                   // [default = ""];
   string y = 2;                   // [default = ""];
   string z = 3;                   // [default = ""];
}
message PowerUpBundle {
   string power_up_bundle_id = 1;                   //DONE
   int32 target_level = 2;          //DONE
   UnitTier target_gear_tier = 3;   //DONE
   bool auto_select_tier = 4;       //DONE
}
message PvPArena {
    int64 combat_type = 1;          //DONE
    int64 arena_rank = 2;           //DONE
    ArenaSquad arena_squad = 3;     //DONE
}

// [[ Q ]]
// [[ R ]]
message Recipe {
   string recipe_id = 1;                       //DONE 
   string name_key = 2;                 //DONE
   string desc_key = 3;                 //DONE
   string icon_key = 4;                 //DONE
   BucketItem result = 5;               //DONE
   repeated BucketItem ingredients = 6; //DONE
   RecipeType type = 7;                 //DONE     
//   Requirement view_requirement = 8;    //NULL ?    
//   int32 unlock_level = 9;              //NULL ? 
   Requirement craft_requirement = 10;  //DONE
}
message Requirement {
   EvaluationType eval_type = 1;                    //DONE
   repeated RequirementItem requirement_item = 2;   //DONE
   string requirement_id = 3;                       //DONE
   string desc_key = 4;                             //DONE
}
message RequirementItem {
   RequirementType type = 1;                        //DONE
   string requirement_item_id = 2;                  //DONE
   int32 value = 3;                                 //DONE
}

// [[ S ]]
message Skill {
    string skill_id = 1;
    uint32 level = 2;
}
message SkillDefinition {
   string skill_id = 1;                             //DONE
//   bytes null2 = 2;                               //NULL ?
   string name_key = 3;                             //DONE
   string icon_key = 4;                             //DONE
   repeated SkillTierDefinition tier = 5;
   string ability_id = 6;                           //DONE
   int32 type = 7;                         //1 or 2 (2=Level1:Rarity1)??
}
message SkillDefinitionReference {
   string skill_id = 1;               //DONE
//   bytes null2 = 2;             //NULL ?
   UnitTier required_tier = 3;  //DONE
   Rarity required_rarity = 4;  //DONE
}
message SkillTierDefinition {
   string recipe_id = 1;                           //DONE
   int32 required_unit_level = 2;           //DONE
   Rarity required_unit_rarity = 3;         //DONE
   int32 required_equipment_level = 4;     //DONE
}
message Stat {
//   string id = 1;                     //NULL?
//   bytes null2 = 2;                   //NULL?
   UnitStat stat_id = 3;                   //DONE
//   int32 stat_value_decimal_old = 4;  //NULL ?
   int64 stat_value_decimal = 5;      //DONE
}
message StatDef {
//   bytes null1 = 1;               //NULL ?
//   bytes null2 = 2;               //NULL ?
//   bytes null3 = 3;               //NULL ?
//   bytes null4 = 4;               //NULL ?
//   bytes null5 = 5;               //NULL ?
//   bytes null6 = 6;               //NULL ?
//   bytes null7 = 7;               //NULL ?
//   bytes null8 = 8;               //NULL ?
//   bytes null9 = 9;               //NULL ?
//   bytes null10 = 10;             //NULL ?
//   bytes null11 = 11;             //NULL ?
//   bytes null12 = 12;             //NULL ?
//   bytes null13 = 13;             //NULL ?
//   bytes null14 = 14;             //NULL ?
//   bytes null15 = 15;             //NULL ?
//   bytes null16 = 16;             //NULL ?
//   bytes null17 = 17;             //NULL ?
//   bytes null18 = 18;             //NULL ?
   repeated Stat stat = 19;       //DONE
}
message StatProgression {
   string stat_progression_id = 1;                   //DONE
//   bytes null2 = 2;                 //NULL ?
//   bytes null3 = 3;                 //NULL ?
//   bytes null4 = 4;                 //NULL ?
//   bytes null5 = 5;                 //NULL ?
   StatDef stat = 6;                //DONE
   OperationType operation = 7;     //DONE
}
message StatValueRange {
   UnitStat stat = 1;                   // [default = UNITSTATMAXHEALTH];
   BattleUnitStateStat battle_stat = 2;                   // [default = BATTLEUNITSTATUNDEFINED];
   StatValueRangeNumber min = 3;
   StatValueRangeNumber max = 4;
}
message StatValueRangeNumber {
   int32 value = 1;                   // [default = 0];
   bool inclusive = 2;                   // [default = false];
}

// [[ T ]]
message Table {
   string table_id = 1;                   // [default = ""];
   repeated TableRow row = 2;
}
message TableRow {
   string key = 1;                   // [default = ""];
   string value = 2;                   // [default = ""];
}
message TargetingSet {
   string targeting_set_id = 1;                           //DONE
   repeated TargetingWeight weight = 2;     //DONE
}
message TargetingWeight {
   string type = 1;                         //DONE
   string param = 2;                        //DONE
//   string null3 = 3;                      //NULL ?
   int32 value_decimal = 4;                 //DONE
}
message Territory {
//    int32 id = 1;                           //NULL ?
    int32 combat_type = 2;                  //DONE
    TerritoryPoints points_required = 3;    //DONE
//    bytes null4 = 4;                        //NULL ?
//    bytes null5 = 5;                        //NULL ?
//    bytes null6 = 6;                        //NULL ?
//    bytes null7 = 7;                        //NULL ?
    TerritoryDetails details = 8;               //??
    string image = 9;               //DONE
}
message TerritoryData {
    bytes unknown_array = 1;        //NULL ?
//    string name = 2;                //DONE
    int32 points = 3;               //DONE
//    repeated Thing unknown_int = 4; //NULL ?
}
message TerritoryDetails {
    string territory_id = 1;                                  //DONE
//    string name_key = 2;                            //NULL
    string name_key = 3;                            //DONE
    string summary_key = 4;                         //DONE
//    string name_key5 = 5;                           //NULL
    bool some_bool = 6;                             //DONE
    TerritoryRequirement required_territoy = 7;     //DONE
    bool other_bool = 8;                            //DONE
}
message TerritoryPoints {
//  string null1 = 1;           //NULL
//  string null2 = 2;           //NULL
    int64 points = 3;           //DONE
}
message TerritoryRequirement {
    int32 unlock = 1;   
    TerritoryRequirementKey required = 2;
    string unlock_key = 3;    
}
message TerritoryRequirementKey {
//    int32 required = 1;       //NULL
    string territory_id = 2;              //DONE
//    int32 sumamry_key = 3;    //NULL  
}
message TerritoryBattleEvent {
    string territory_battle_event_id = 1;                              //DONE
    string name_key = 2;                        //DONE
    string summary_key = 3;                     //DONE
    string map_key = 4;                         //DONE
//    string unknown_array = 5;                 //NULL ?
    int32 phases = 6;                           //DONE
//    int32 points = 7;                         //DONE
    repeated Territory territory = 8;    //DONE
}
message TerritoryWars {
    repeated int32 unknown_enums = 1;   //DONE
    string name_key = 2;                //DONE
    string summary_key = 3;             //DONE
    string map_key = 4;                 //DONE
//    int32 unknown_id = 5;               //NULL - ALWAYS 1
    string icon_key = 6;                //DONE
    string texture_key = 7;             //DONE
}
message TimeLimitedModifier {
   int64 start_time = 1;                   // [default = 0];
   int64 end_time = 2;                   // [default = 0];
}

// [[ U ]]
message Unit {
   string unit_id = 1;                                           //DONE
   string unit_prefab = 2;                                  //DONE
   string thumbnail = 3;                                    //DONE
   string name_key = 4;                                     //DONE
//   bytes unknown_null5 = 5;                                 //NULL ?
//   bytes unknown_null6 = 6;                                 //NULL ?
//   bytes unknown_null7 = 7;                                 //NULL ?
//   bytes unknown_null8 = 8;                                 //NULL ?
//   bytes unknown_null9 = 9;                                 //NULL ?
//   bytes unknown_null10 = 10;                               //NULL ?
   Rarity rarity = 11;                                      //DONE
   Rarity max_rarity = 12;                                  //DONE
   ForceAlignment force_alignment = 13;                     //DONE
   string xp_table_id = 14;                                 //DONE
//   bytes unknown_null15 = 15;                               //NULL ?
//   bytes unknown_null16 = 16;                               //NULL ?
   int32 action_count_min = 17;                             //DONE
   int32 action_count_max = 18;                             //DONE
   CombatType combat_type = 19;                             //DONE
//   bytes unknown_null20 = 20;                               //NULL ?
   string desc_key = 21;                                    //DONE
//   bytes unknown_null22 = 22;                               //NULL ?
//   bytes unknown_null23 = 23;                               //NULL ?
   ThreatLevel threat_level = 24;                           //DONE
   bool obtainable = 25;                                    //DONE
   string base_id = 26;                                     //DONE
   string promotion_recipe_reference = 27;                  //DONE
//   repeated CrewGroupSlotDef crew_group_slot = 28;          //NULL ?
//   bytes unknown_null29 = 29;                               //NULL ?
//   bytes unknown_null30 = 30;                               //NULL ?
//   bytes unknown_null31 = 31;                               //NULL ?
//   bytes unknown_null32 = 32;                               //NULL ?
   string stat_progression_id = 33;                         //DONE
   repeated string category_id = 34;                        //DONE
//   bytes unknown_null35 = 35;                               //NULL ?
   int32 training_xp_worth_base_value_override = 36;        //DONE
//   bytes unknown_null37 = 37;                               //NULL ?
   int32 max_level_override = 38;                           //DONE
   int32 training_cost_multiplier_override = 39;            //DONE
//   bytes unknown_null40 = 40;                               //NULL ?
   string creation_recipe_reference = 41;                   //DONE
   repeated SkillDefinitionReference skill_reference = 42;  //DONE
   int32 base_power = 43;                                   //DONE
//   bytes unknown_null44 = 44;                               //NULL ?
//   bytes unknown_null45 = 45;                               //NULL ?
//   bytes unknown_null46 = 46;                               //NULL ?
//   bytes unknown_null47 = 47;                               //NULL ?
//   bytes unknown_null48 = 48;                               //NULL ?
//   bytes unknown_null49 = 49;                               //NULL ?
   StatDef base_stat = 50;                                  //DONE
//   string primary_stat = 51;                                //NULL ?
   repeated UnitTierDef unit_tier = 52;                     //DONE
//   bytes basic_attack = 53;                                 //NULL ?
//   bytes leader_ability = 54;                               //NULL ?
//   bytes limit_break = 55;                                  //NULL ?
//   bytes unique_ability = 56;                               //NULL ?
//   bytes crew_ability = 57;                                 //NULL ?
//   bytes crew_unique_ability = 58;                          //NULL ?
   repeated AbilityReference basic_attack_ref = 59;         //DONE
   repeated AbilityReference leader_ability_ref = 60;       //DONE
   repeated AbilityReference special_bility_ref = 61;       //DONE
   repeated AbilityReference unique_ability_ref = 62;       //DONE
//   repeated AbilityReference crew_ability_ref = 63;         //NULL ?
//   repeated AbilityReference crew_unique_ability_ref = 64;  //NULL ?
   UnitStat primary_unit_stat = 65;                         //DONE
   int64 obtainable_time = 66;                              //DONE
   repeated CrewMember crew = 67;                           //DONE
//   int32 command_cost = 68;                                 //NULL ?
   string crew_contribution_table_id = 69;                  //DONE
   UnitClass unitClass = 70;                                //DONE
}
message UnitKey {
    string unit_id = 1;
    string name = 2;
    
}
message UnitTierDef {
   UnitTier tier = 1;                 //DONE
   repeated string equipment = 2;     //DONE
   StatDef base_stat = 3;             //DONE
}

// [[ V ]]
// [[ W ]]
message War {
   string war_id = 1;                           //DONE
   CombatType type = 2;                     //DONE
   CampaignNodeDifficulty difficulty = 3;   //DONE
   string daily_reset_cap_key = 4;          //DONE
   repeated WarNode node = 5;            //DONE
   OldWar old_war = 6;               //??
}
message WarNode {
   string war_node_id = 1;                           //DONE
   WarNodeType type = 2;                    //DONE
   CombatType combat_type = 3;              //DONE
   Position position = 4;                   //DONE
}

// [[ X ]]
message XpTable {
   string xp_table_id = 1;                   //DONE
//   repeated XpTableRow row = 2;     //MAPPED
   map<int32,int64> row = 2;        //DONE
}
message XpTableRow {
   int32 index = 1;                   // [default = 0];
   int32 xp = 2;                   // [default = 0];
}

// [[ Y ]]
// [[ Z ]]


//
// ** SUPPORT OBJECTS **
//

// [[ A ]]
enum AbilityButtonLocationType {
   NO_AbilityButtonLocationType = 0;
   ABILITY_STANDARD = 1;
   ABILITY_ADDITIONAL = 2;
   ABILITY_HIDDEN = 3;
}
enum ActionLinkType {
   NO_ActionLinkType = 0;
   INTERNAL = 1;
   EXTERNAL = 2;
}

// [[ B ]]
enum BattleUnitStateStat {
   NO_BattleUnitStateStat = 0;
   BATTLE_UNIT_STAT_UNDEFINED = 1;
   BATTLE_UNIT_STAT_HEALTH = 2;
   BATTLE_UNIT_STAT_HEALTH_PERCENT = 3;
   BATTLE_UNIT_STAT_SPEED_FILL = 4;
   BATTLE_UNIT_STAT_SPEED_FILL_PERCENT = 5;
}

// [[ C ]]
enum CampaignNodeDifficulty {
   NO_CampaignNodeDifficulty = 0;
   NORMAL_DIFF = 4;
   HARD_DIFF = 5;
   NIGHTMARE_DIFF = 6;
   SPECIAL_DIFF = 7;
   I_DIFF = 8;
   II_DIFF = 9;
   III_DIFF = 10;
   IV_DIFF = 11;
   V_DIFF = 12;
   VI_DIFF = 13;
}
enum ChallengeClaimType {
   NO_ChallengeClaimType = 0;
   CHALLENGE_CLAIM_MANUAL = 1;
   CHALLENGE_CLAIM_AUTOMATIC = 2;
}
enum ChallengeRewardType {
   NO_ChallengeRewardType = 0;
   CHALLENGE_REWARD_FIXED = 1;
   CHALLENGE_REWARD_RATIO = 2;
}
enum ChallengeType {
   NO_ChallengeType = 0;
   DAILY_CHALLENGE = 1;
   LIFETIME_CHALLENGE = 2;
}
enum CombatType {
   NO_CombatType = 0;
   CHARACTER = 1;
   SHIP = 2;
}
enum ConditionType {
   NO_ConditionType = 0;
   ROUND_COUNT = 1;
   END_OF_ROUND = 2;
   START_OF_ROUND = 3;
   START_OF_BATTLE = 4;
   CHANCE = 5;
   START_OF_ENCOUNTER = 7;
   CRIT = 8;
   RECEIVE_CRIT = 9;
   PERFORM_MOVE = 10;
   ATTACK = 11;
   LIMIT_BREAK = 12;
   RECEIVE_DAMAGE = 13;
   RECEIVE_HEAL = 14;
   COMBO = 15;
   RECEIVE_COMBO = 16;
   KILL = 17;
   REVIVE = 18;
   ENEMY_KILLED = 19;
   ALLY_KILLED = 20;
   DEATH = 21;
   ALLY_REVIVED = 22;
   ENEMY_REVIVED = 23;
   END_OF_ENCOUNTER = 24;
   START_OF_TURN = 25;
   HEALTH_DECREASE = 26;
   HEALTH_INCREASE = 27;
   PERSISTENT_EFFECT_ADD = 28;
   PERSISTENT_EFFECT_REMOVE = 29;
   DODGED = 30;
   WAS_DODGED = 31;
   END_OF_TURN = 32;
   RESISTED = 33;
   WAS_RESISTED = 34;
   START_MOVE = 35;
   START_ATTACK = 36;
   START_LIMIT_BREAK = 37;
   PRE_EFFECT_EVAL = 38;
   RECEIVE_PRE_EFFECT_EVAL = 39;
   POST_EFFECT_EVAL = 40;
   RECEIVE_POST_EFFECT_EVAL = 41;
   PRE_EVASION_EVAL = 42;
   RECEIVE_PRE_EVASION_EVAL = 43;
   POST_EVASION_EVAL = 44;
   RECEIVE_POST_EVASION_EVAL = 45;
   START_OF_GUILD_RAID_FOR_PLAYER = 46;
   START_OF_GUILD_RAID_ENCOUNTER_FOR_PLAYER = 47;
   PRE_RECEIVE_DAMAGE = 48;
   FULL_TURN_COMPLETE = 49;
   PERSISTENT_EFFECT_ADD_INSTANCE = 50;
   PERSISTENT_EFFECT_REMOVE_INSTANCE = 51;
   FLED = 52;
   ALLY_FLED = 53;
   ENEMY_FLED = 54;
}
enum CurrencyType {
   NO_CurrencyType = 0;
   GRIND = 1;
   PREMIUM = 2;
   REAL_MONEY = 3;
   SOCIAL = 4;
   IGC_EVENT_KEYCARD = 8;
   XP_EVENT_KEYCARD = 9;
   PVP_CURRENCY = 10;
   FORCE_POINT = 11;
   PVP_SHIP_CURRENCY = 12;
   FREE = 13;
   WAR_SHIP_CURRENCY = 14;
   GRIND_TICKET = 15;
   SHARD_CURRENCY = 16;
   GUILD_CURRENCY = 17;
   GUILD_BANK_CURRENCY = 18;
   SHIP_GRIND = 19;
   GUILD_RAID_CURRENCY_01 = 20;
   GUILD_RAID_CURRENCY_02 = 21;
   GUILD_RAID_CURRENCY_03 = 22;
   GUILD_RAID_CURRENCY_04 = 23;
   GUILD_RAID_CURRENCY_05 = 24;
   GUILD_RAID_CURRENCY_06 = 25;
   GUILD_RAID_CURRENCY_07 = 26;
   GUILD_RAID_CURRENCY_08 = 27;
   GUILD_RAID_CURRENCY_09 = 28;
   GUILD_RAID_CURRENCY_10 = 29;
   GUILD_RAID_CURRENCY_11 = 30;
   GUILD_RAID_CURRENCY_12 = 31;
}

// [[ D ]]
// [[ E ]]
enum EffectApplyType {
   NO_EffectApplyType = 0;
   UNAVOIDABLE = 1;
   PHYSICAL = 2;
   MENTAL = 3;
}
enum EffectDamageType {
   NO_EffectDamageType = 0;
   UNMITIGABLE = 1;
   ATTACK_DAMAGE = 2;
   ABILITY_POWER = 3;
}
enum EffectTargetBattleSide {
   NO_EffectTargetBattleSide = 0;
   BOTH_SIDES = 1;
   ALLY_SIDE = 2;
   ENEMY_SIDE = 3;
   PLAYER_SIDE = 4;
   OPPONENT_SIDE = 5;
}
enum EffectTargetUnitSelect {
   NO_EffectTargetUnitSelect = 0;
   SELECT_ALL = 1;
   SELECTED_TARGET = 2;
   SELECT_RANDOM = 3;
   SELECT_SELF = 4;
   SELECT_PREVIOUS = 5;
}
enum EffectType {
   NO_EffectType = 0;
   DAMAGE = 1;
   RECOVER = 2;
   PARALYSIS = 3;
   CURSE = 4;
   DISPELL = 5;
   IMMUNITY = 6;
   BONUS_MOVE = 7;
   MODIFY_STAT = 8;
   APPLY_EFFECT = 9;
   DISTRIBUTE_RECOVERY = 10;
   QUERY_COUNT = 11;
   QUERY_STAT = 12;
   REVIVE_UNIT = 13;
   SCRIPT_COMPONENT = 14;
   FLEE = 15;
   DESTROY = 16;
}
enum EquipmentType {
   NO_EquipmentType = 0;
   EQUIPMENT_EQUIPPABLE = 1;
   EQUIPMENT_UNRELEASED = 2;
   EQUIPMENT_MATERIAL = 3;
}
enum EvaluationType {
   NO_EvaluationType = 0;
   AND = 1;
   OR = 2;
}

// [[ F ]]
enum ForceAlignment {
   NO_ForceAlignment = 0;
   NEUTRAL = 1;
   LIGHT = 2;
   DARK = 3;
}

// [[ G ]]
enum GuildRaidRosterRefreshType {
   NO_GuildRaidRosterRefreshType = 0;
   RAID_ROSTER_REFRESH_NONE = 1;
   RAID_ROSTER_REFRESH_SCHEDULED = 2;
   RAID_ROSTER_REFRESH_PURCHASABLE = 3;
   RAID_ROSTER_REFRESH_TIMED = 4;
}
enum GuildRaidType {
   NO_GuildRaidType = 0;
   RAID_TYPE_PERMANENT = 1;
   RAID_TYPE_TIME_LIMITED = 2;
}

// [[ H ]]
enum HelpType {
   NO_HelpType = 0;
   BATTLE = 1;
   SQUAD = 2;
   PROGRESS = 3;
}

// [[ I ]]
enum ItemType {
   NO_ItemType = 0;
   EMPTY = 1;
   UNIT = 2;
   CURRENCY = 3;
   BUCKET = 4;
   CONSUMABLE = 5;
   XP = 6;
   MATERIAL = 7;
   ENERGY = 8;
   UNIT_SHARD = 9;
   RECIPE = 10;
   EQUIPMENT = 11;
   EVENT_KEYCARD = 12;
   POWERUP_BUNDLE = 13;
   MYSTERY_BOX = 14;
   STAT_MOD = 15;
   MYSTERY_STAT_MOD = 16;
}

// [[ J ]]
// [[ K ]]
// [[ L ]]
// [[ M ]]
enum MaterialType {
   NO_MaterialType = 0;
   CRAFTING_MATERIAL = 1;
   XP_MATERIAL = 2;
   UNIT_SHARD_MATERIAL = 3;
   PROMOTION_MATERIAL = 4;
   SKILL_MATERIAL = 5;
   SELL_MATERIAL = 6;
   SHIP_XP_MATERIAL = 7;
}

// [[ N ]]
// [[ O ]]
enum OperationType {
   NO_OperationType = 0;
   ADDITIVE = 1;
   MULTIPLICATIVE = 2;
}

// [[ P ]]
// [[ Q ]]
// [[ R ]]
enum Rarity {
   NO_Rarity = 0;
   ONE_STAR = 1;
   TWO_STAR = 2;
   THREE_STAR = 3;
   FOUR_STAR = 4;
   FIVE_STAR = 5;
   SIX_STAR = 6;
   SEVEN_STAR = 7;
   NO_STAR = 8;
}
enum RecipeType {
   NO_RecipeType = 0;
   RECIPE_INVALID = 1;
   RECIPE_PROMOTION = 2;
   RECIPE_SHIP = 3;
   RECIPE_CONSUMABLE = 4;
   RECIPE_CHARACTER = 5;
   RECIPE_SKILL = 6;
   RECIPE_EQUIPMENT = 7;
}
enum RequirementType {
   NO_RequirementType = 0;
   CURRENCY_REQUIREMENT = 3;
   ROSTER_CHARACTER_NOT_CATEGORY_NOT_IN_SQUAD_REQUIREMENT = 10;
   SQUAD_SIZE_MAXIMUM_REQUIREMENT = 11;
   ROSTER_CHARACTER_CATEGORY_NOT_IN_USE_REQUIREMENT = 12;
   ROSTER_CHARACTER_NOT_IN_USE_REQUIREMENT = 13;
   SQUAD_SIZE_MINIMUM_REQUIREMENT = 14;
   ENEMY_THREAT_LEVEL_REQUIREMENT = 15;
   ANY_CHARACTER_READY_FOR_PROMOTION = 16;
   UNIT_TRAINING_AVAILABLE = 19;
   PLAYER_LEVEL_MIN_REQUIREMENT = 20;
   ROSTER_UNIT_TYPE_REQUIREMENT = 22;
   ROSTER_UNIT_TYPE_MAX_REQUIREMENT = 23;
   UNIT_ABILITY_UPGRADE_AVAILABLE = 24;
   UNIT_GEAR_EQUIP_AVAILABLE = 25;
   CURRENT_UNIT_GEAR_EQUIP_AVAILABLE = 26;
   PLAYER_UNIT_HEALTH_BELOW_PERCENT = 27;
   REQUIREMENT_INVALID = 28;
   CURRENT_CHARACTER_READY_FOR_PROMOTION = 29;
   BATTLE_ANY_STATUS_EFFECT_ACTIVE = 30;
   STORE_ITEM_AVAILABLE_FOR_PURCHASE = 31;
   CURRENT_MISSION_HAS_GEAR_DROP = 32;
   PLAYER_LEVEL_MAX_REQUIREMENT = 33;
   CAMPAIGN_REQUIREMENT = 34;
   ANY_DAILY_ACTIVITY_READY_FOR_CLAIM = 35;
   FACEBOOK_LOGIN_AVAILABLE = 36;
   ANY_UNIT_REACHED_MAX_RARITY = 37;
   CURRENT_CHARACTER_READY_FOR_TIER_UP = 38;
   EVENT_ACTIVE = 39;
   BATTLE_ANY_UNIT_HAS_SHIELD = 40;
   CURRENT_CHARACTER_MIN_TIER = 41;
   UNIT_LEVEL_MAX_REQUIREMENT = 42;
   UNIT_LEVEL_MIN_REQUIREMENT = 43;
   ROSTER_UNIT_REQUIREMENT = 44;
   UNIT_SHARD_REQUIREMENT = 45;
   ROSTER_UNIT_COMBAT_TYPE_REQUIREMENT = 46;
   BATTLE_TURN_COUNT = 47;
   BATTLE_ENCOUNTER_STARTED = 48;
   BATTLE_UNIT_TURN_SQUAD_CELL_INDEX = 49;
   ROSTER_UNIT_CLASS_REQUIREMENT = 50;
}

// [[ S ]]
enum SquadType {
   NO_SquadType = 0;
   SQUAD_NEUTRAL = 1;
   SQUAD_LIGHT = 2;
   SQUAD_DARK = 3;
   SQUAD_EVENT = 4;
   SQUAD_PVP = 5;
   SQUAD_RESTRICTED = 6;
   SQUAD_SUPPLIED = 7;
   SQUAD_WAR = 8;
   SQUAD_EVENT_01 = 9;
   SQUAD_EVENT_02 = 10;
   SQUAD_EVENT_03 = 11;
   SQUAD_EVENT_04 = 12;
   SQUAD_EVENT_05 = 13;
   SQUAD_EVENT_06 = 14;
   SQUAD_EVENT_07 = 15;
   SQUAD_EVENT_08 = 16;
   SQUAD_EVENT_09 = 17;
   SQUAD_EVENT_10 = 18;
   SQUAD_EVENT_11 = 19;
   SQUAD_EVENT_12 = 20;
   SQUAD_EVENT_13 = 21;
   SQUAD_EVENT_14 = 22;
   SQUAD_EVENT_15 = 23;
   SQUAD_EVENT_16 = 24;
   SQUAD_EVENT_17 = 25;
   SQUAD_EVENT_18 = 26;
   SQUAD_EVENT_19 = 27;
   SQUAD_EVENT_20 = 28;
   SQUAD_WAR_DEFENSIVE = 29;
   SQUAD_GUILD_RAID = 30;
   SQUAD_STAT_MOD_BATTLES = 31;
   SQUAD_EVENT_DEFENSIVE = 32;
}
enum ModStatSlot {
   NO_ModStatSlot = 0;
   STATMOD_SLOT_01 = 2;
   STATMOD_SLOT_02 = 3;
   STATMOD_SLOT_03 = 4;
   STATMOD_SLOT_04 = 5;
   STATMOD_SLOT_05 = 6;
   STATMOD_SLOT_06 = 7;
}
enum ModStatTier {
   NO_ModStatTier = 0;
   STATMOD_TIER_01 = 1;
   STATMOD_TIER_02 = 2;
   STATMOD_TIER_03 = 3;
   STATMOD_TIER_04 = 4;
   STATMOD_TIER_05 = 5;
}
enum SystemModified {
   NO_SystemModified = 0;
   SYSTEM_NONE = 1;
   UNIT_TRAINING = 2;
}
enum SystemModifierType {
   NO_SystemModifierType = 0;
   TIME_LIMITED = 1;
}

// [[ T ]]
enum ThreatLevel {
   NO_ThreatLevel = 0;
   NORMAL = 1;
   ELITE = 2;
   BOSS = 3;
   ANY = 4;
}

// [[ U ]]
enum UnitClass {
   NO_UnitClass = 0;
   WARRIOR = 1;
   TACTICIAN = 2;
   SCOUNDREL = 3;
   LIGHT_FORCE = 4;
   DARK_FORCE = 5;
   UNITCLASS_STANDARD = 6;
   UNITCLASS_COMMANDER = 7;
}
enum UnitHealthState {
   NO_UnitHealthState = 0;
   UNIT_HEALTH_STATE_ANY = 1;
   UNIT_HEALTH_STATE_ALIVE = 2;
   UNIT_HEALTH_STATE_DEAD = 3;
}
enum UnitStat {
   NO_UnitStat = 0;
   UNIT_STAT_MAX_HEALTH = 1;
   UNIT_STAT_STRENGTH = 2;
   UNIT_STAT_AGILITY = 3;
   UNIT_STAT_INTELLIGENCE = 4;
   UNIT_STAT_SPEED = 5;
   UNIT_STAT_ATTACK_DAMAGE = 6;
   UNIT_STAT_ABILITY_POWER = 7;
   UNIT_STAT_ARMOR = 8;
   UNIT_STAT_SUPPRESSION = 9;
   UNIT_STAT_ARMOR_PENETRATION = 10;
   UNIT_STAT_SUPPRESSION_PENETRATION = 11;
   UNIT_STAT_DODGE_RATING = 12;
   UNIT_STAT_DEFLECTION_RATING = 13;
   UNIT_STAT_ATTACK_CRITICAL_RATING = 14;
   UNIT_STAT_ABILITY_CRITICAL_RATING = 15;
   UNIT_STAT_CRITICAL_DAMAGE = 16;
   UNIT_STAT_ACCURACY = 17;
   UNIT_STAT_RESISTANCE = 18;
   UNIT_STAT_DODGE_PERCENT_ADDITIVE = 19;
   UNIT_STAT_DEFLECTION_PERCENT_ADDITIVE = 20;
   UNIT_STAT_ATTACK_CRITICAL_PERCENT_ADDITIVE = 21;
   UNIT_STAT_ABILITY_CRITICAL_PERCENT_ADDITIVE = 22;
   UNIT_STAT_ARMOR_PERCENT_ADDITIVE = 23;
   UNIT_STAT_SUPPRESSION_PERCENT_ADDITIVE = 24;
   UNIT_STAT_ARMOR_PENETRATION_PERCENT_ADDITIVE = 25;
   UNIT_STAT_SUPPRESSION_PENETRATION_PERCENT_ADDITIVE = 26;
   UNIT_STAT_HEALTH_STEAL = 27;
   UNIT_STAT_MAX_SHIELD = 28;
   UNIT_STAT_SHIELD_PENETRATION = 29;
   UNIT_STAT_HEALTH_REGEN = 30;
   UNIT_STAT_ATTACK_DAMAGE_PERCENT_ADDITIVE = 31;
   UNIT_STAT_ABILITY_POWER_PERCENT_ADDITIVE = 32;
   UNIT_STAT_DODGE_NEGATE_PERCENT_ADDITIVE = 33;
   UNIT_STAT_DEFLECTION_NEGATE_PERCENT_ADDITIVE = 34;
   UNIT_STAT_ATTACK_CRITICAL_NEGATE_PERCENT_ADDITIVE = 35;
   UNIT_STAT_ABILITY_CRITICAL_NEGATE_PERCENT_ADDITIVE = 36;
   UNIT_STAT_DODGE_NEGATE_RATING = 37;
   UNIT_STAT_DEFLECTION_NEGATE_RATING = 38;
   UNIT_STAT_ATTACK_CRITICAL_NEGATE_RATING = 39;
   UNIT_STAT_ABILITY_CRITICAL_NEGATE_RATING = 40;
   UNIT_STAT_OFFENSE = 41;
   UNIT_STAT_DEFENSE = 42;
   UNIT_STAT_DEFENSE_PENETRATION = 43;
   UNIT_STAT_EVASION_RATING = 44;
   UNIT_STAT_CRITICAL_RATING = 45;
   UNIT_STAT_EVASION_NEGATE_RATING = 46;
   UNIT_STAT_CRITICAL_NEGATE_RATING = 47;
   UNIT_STAT_OFFENSE_PERCENT_ADDITIVE = 48;
   UNIT_STAT_DEFENSE_PERCENT_ADDITIVE = 49;
   UNIT_STAT_DEFENSE_PENETRATION_PERCENT_ADDITIVE = 50;
   UNIT_STAT_EVASION_PERCENT_ADDITIVE = 51;
   UNIT_STAT_EVASION_NEGATE_PERCENT_ADDITIVE = 52;
   UNIT_STAT_CRITICAL_CHANCE_PERCENT_ADDITIVE = 53;
   UNIT_STAT_CRITICAL_NEGATE_CHANCE_PERCENT_ADDITIVE = 54;
   UNIT_STAT_MAX_HEALTH_PERCENT_ADDITIVE = 55;
   UNIT_STAT_MAX_SHIELD_PERCENT_ADDITIVE = 56;
   UNIT_STAT_SPEED_PERCENT_ADDITIVE = 57;
   UNIT_STAT_COUNTER_ATTACK_RATING = 58;
   UNIT_STAT_TAUNT = 59;
}
enum UnitTier {
   NO_UnitTier = 0;
   TIER_01 = 1;
   TIER_02 = 2;
   TIER_03 = 3;
   TIER_04 = 4;
   TIER_05 = 5;
   TIER_06 = 6;
   TIER_07 = 7;
   TIER_08 = 8;
   TIER_09 = 9;
   TIER_10 = 10;
   TIER_11 = 11;
   TIER_12 = 12;
   TIER_13 = 13;
   TIER_14 = 14;
   TIER_15 = 15;
   TIER_16 = 16;
   TIER_17 = 17;
   TIER_18 = 18;
   TIER_19 = 19;
   TIER_20 = 20;
}

// [[ V ]]
// [[ W ]]
enum WarNodeType {
   NO_WarNodeType = 0;
   NODETYPE_OPPONENT = 1;
   NODETYPE_CHEST_COMMON = 2;
   NODETYPE_CHEST_RARE = 3;
   NODETYPE_CHEST_EPIC = 4;
}

// [[ X ]]
// [[ Y ]]
// [[ Z ]]